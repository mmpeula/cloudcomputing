{"ast":null,"code":"var _jsxFileName = \"/home/marcos/iasi/cloudcomputing/homework4/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { useMsal } from '@azure/msal-react';\nimport { loginRequest } from './msalConfig'; // Asegúrate de que la importación de loginRequest esté bien\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    instance,\n    accounts\n  } = useMsal();\n  const [tasks, setTasks] = useState([]);\n  const [accessToken, setAccessToken] = useState('');\n  const navigate = useNavigate();\n  const addTask = newTask => {\n    setTasks([...tasks, newTask]);\n  };\n  const handleLogin = async () => {\n    try {\n      // Asegúrate de que no hay interacción en progreso\n      if (!instance.getAllAccounts().length) {\n        const loginResponse = await instance.loginPopup(loginRequest); // Usa loginRequest correctamente\n        console.log('Login successful:', loginResponse);\n        setAccessToken(loginResponse.accessToken);\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n  const handleLogout = () => {\n    instance.logoutRedirect();\n    setAccessToken('');\n  };\n  useEffect(() => {\n    if (accounts.length > 0) {\n      setAccessToken(accounts[0].idToken);\n    }\n  }, [accounts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), !accounts.length ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Sign in with Azure AD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome, \", accounts[0].username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Sign out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n        addTask: addTask,\n        accessToken: accessToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ypDNaDzFepBjHM1qUrSZjFCYafc=\", false, function () {\n  return [useMsal, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMsal","loginRequest","TaskForm","TaskList","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","instance","accounts","tasks","setTasks","accessToken","setAccessToken","navigate","addTask","newTask","handleLogin","getAllAccounts","length","loginResponse","loginPopup","console","log","error","handleLogout","logoutRedirect","idToken","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","username","_c","$RefreshReg$"],"sources":["/home/marcos/iasi/cloudcomputing/homework4/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { useMsal } from '@azure/msal-react';\nimport { loginRequest } from './msalConfig';  // Asegúrate de que la importación de loginRequest esté bien\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport { useNavigate } from 'react-router-dom';\n\nconst App = () => {\n  const { instance, accounts } = useMsal();  \n  const [tasks, setTasks] = useState([]);\n  const [accessToken, setAccessToken] = useState('');\n  const navigate = useNavigate();\n\n  const addTask = (newTask) => {\n    setTasks([...tasks, newTask]);\n  };\n\n  const handleLogin = async () => {\n    try {\n      // Asegúrate de que no hay interacción en progreso\n      if (!instance.getAllAccounts().length) {\n        const loginResponse = await instance.loginPopup(loginRequest);  // Usa loginRequest correctamente\n        console.log('Login successful:', loginResponse);\n        setAccessToken(loginResponse.accessToken);\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n\n  const handleLogout = () => {\n    instance.logoutRedirect();\n    setAccessToken('');\n  };\n\n  useEffect(() => {\n    if (accounts.length > 0) {\n      setAccessToken(accounts[0].idToken);\n    }\n  }, [accounts]);\n\n  return (\n    <div>\n      <h1>Task Manager</h1>\n      {!accounts.length ? (\n        <button onClick={handleLogin}>Sign in with Azure AD</button>\n      ) : (\n        <>\n          <p>Welcome, {accounts[0].username}</p>\n          <button onClick={handleLogout}>Sign out</button>\n          <TaskForm addTask={addTask} accessToken={accessToken} />\n          <TaskList tasks={tasks} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}