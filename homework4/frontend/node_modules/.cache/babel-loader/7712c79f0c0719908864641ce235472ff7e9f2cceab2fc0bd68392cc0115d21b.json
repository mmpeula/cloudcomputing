{"ast":null,"code":"var _jsxFileName = \"/home/marcos/iasi/cloudcomputing/homework 4/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useMsal } from '@azure/msal-react';\nimport { msalInstance, loginRequest } from './msalConfig'; // Configuración de MSAL\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport { useNavigate } from 'react-router-dom'; // Para redireccionar\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    instance,\n    accounts\n  } = useMsal(); // Obtener la instancia de MSAL y los detalles de la cuenta\n  const [tasks, setTasks] = useState([]);\n  const [accessToken, setAccessToken] = useState('');\n  const navigate = useNavigate();\n  const addTask = newTask => {\n    setTasks([...tasks, newTask]);\n  };\n  const handleLogin = async () => {\n    try {\n      const loginResponse = await instance.loginPopup(loginRequest); // Login con Popup\n      console.log('Login successful:', loginResponse);\n      setAccessToken(loginResponse.accessToken); // Guardar el token de acceso\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n  const handleLogout = () => {\n    instance.logoutRedirect();\n    setAccessToken(''); // Limpiar el token al cerrar sesión\n  };\n  useEffect(() => {\n    if (accounts.length > 0) {\n      setAccessToken(accounts[0].idToken); // Establecer el token de acceso al iniciar sesión\n    }\n  }, [accounts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), !accounts.length ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Sign in with Azure AD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome, \", accounts[0].username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Sign out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n        addTask: addTask,\n        accessToken: accessToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ypDNaDzFepBjHM1qUrSZjFCYafc=\", false, function () {\n  return [useMsal, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMsal","msalInstance","loginRequest","TaskForm","TaskList","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","instance","accounts","tasks","setTasks","accessToken","setAccessToken","navigate","addTask","newTask","handleLogin","loginResponse","loginPopup","console","log","error","handleLogout","logoutRedirect","length","idToken","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","username","_c","$RefreshReg$"],"sources":["/home/marcos/iasi/cloudcomputing/homework 4/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useMsal } from '@azure/msal-react';\nimport { msalInstance, loginRequest } from './msalConfig';  // Configuración de MSAL\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport { useNavigate } from 'react-router-dom';  // Para redireccionar\n\nconst App = () => {\n  const { instance, accounts } = useMsal();  // Obtener la instancia de MSAL y los detalles de la cuenta\n  const [tasks, setTasks] = useState([]);\n  const [accessToken, setAccessToken] = useState('');\n  const navigate = useNavigate();\n\n  const addTask = (newTask) => {\n    setTasks([...tasks, newTask]);\n  };\n\n  const handleLogin = async () => {\n    try {\n      const loginResponse = await instance.loginPopup(loginRequest);  // Login con Popup\n      console.log('Login successful:', loginResponse);\n      setAccessToken(loginResponse.accessToken);  // Guardar el token de acceso\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n\n  const handleLogout = () => {\n    instance.logoutRedirect();\n    setAccessToken('');  // Limpiar el token al cerrar sesión\n  };\n\n  useEffect(() => {\n    if (accounts.length > 0) {\n      setAccessToken(accounts[0].idToken);  // Establecer el token de acceso al iniciar sesión\n    }\n  }, [accounts]);\n\n  return (\n    <div>\n      <h1>Task Manager</h1>\n      {!accounts.length ? (\n        <button onClick={handleLogin}>Sign in with Azure AD</button>\n      ) : (\n        <>\n          <p>Welcome, {accounts[0].username}</p>\n          <button onClick={handleLogout}>Sign out</button>\n          <TaskForm addTask={addTask} accessToken={accessToken} />\n          <TaskList tasks={tasks} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}