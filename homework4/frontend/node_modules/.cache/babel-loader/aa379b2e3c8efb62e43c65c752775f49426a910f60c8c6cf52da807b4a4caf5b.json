{"ast":null,"code":"var _jsxFileName = \"/home/marcos/iasi/cloudcomputing/homework 4/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useMsal } from '@azure/msal-react';\nimport { msalInstance, loginRequest } from './msalConfig';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    instance,\n    accounts\n  } = useMsal(); // Obtener la instancia de MSAL y los detalles de la cuenta\n  const [tasks, setTasks] = useState([]);\n  const [accessToken, setAccessToken] = useState('');\n  const addTask = newTask => {\n    setTasks([...tasks, newTask]);\n  };\n  const handleLogin = async () => {\n    try {\n      const loginResponse = await instance.loginPopup(loginRequest);\n      console.log('Login successful:', loginResponse);\n      setAccessToken(loginResponse.accessToken); // Guardar el token de acceso\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n  const handleLogout = () => {\n    instance.logoutRedirect();\n    setAccessToken(''); // Limpiar el token al cerrar sesión\n  };\n  useEffect(() => {\n    if (accounts.length > 0) {\n      setAccessToken(accounts[0].idToken); // Set the token after login\n    }\n  }, [accounts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), !accounts.length ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Sign in with Azure AD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome, \", accounts[0].username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Sign out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n        addTask: addTask,\n        accessToken: accessToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OaqKE8OHbacGeLMQ1DUxM0nBaEA=\", false, function () {\n  return [useMsal];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMsal","msalInstance","loginRequest","TaskForm","TaskList","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","instance","accounts","tasks","setTasks","accessToken","setAccessToken","addTask","newTask","handleLogin","loginResponse","loginPopup","console","log","error","handleLogout","logoutRedirect","length","idToken","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","username","_c","$RefreshReg$"],"sources":["/home/marcos/iasi/cloudcomputing/homework 4/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useMsal } from '@azure/msal-react';\nimport { msalInstance, loginRequest } from './msalConfig';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\n\nconst App = () => {\n  const { instance, accounts } = useMsal(); // Obtener la instancia de MSAL y los detalles de la cuenta\n  const [tasks, setTasks] = useState([]);\n  const [accessToken, setAccessToken] = useState('');\n\n  const addTask = (newTask) => {\n    setTasks([...tasks, newTask]);\n  };\n\n  const handleLogin = async () => {\n    try {\n      const loginResponse = await instance.loginPopup(loginRequest);\n      console.log('Login successful:', loginResponse);\n      setAccessToken(loginResponse.accessToken); // Guardar el token de acceso\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n\n  const handleLogout = () => {\n    instance.logoutRedirect();\n    setAccessToken(''); // Limpiar el token al cerrar sesión\n  };\n\n  useEffect(() => {\n    if (accounts.length > 0) {\n      setAccessToken(accounts[0].idToken); // Set the token after login\n    }\n  }, [accounts]);\n\n  return (\n    <div>\n      <h1>Task Manager</h1>\n      {!accounts.length ? (\n        <button onClick={handleLogin}>Sign in with Azure AD</button>\n      ) : (\n        <>\n          <p>Welcome, {accounts[0].username}</p>\n          <button onClick={handleLogout}>Sign out</button>\n          <TaskForm addTask={addTask} accessToken={accessToken} />\n          <TaskList tasks={tasks} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,YAAY,EAAEC,YAAY,QAAQ,cAAc;AACzD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGZ,OAAO,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMmB,OAAO,GAAIC,OAAO,IAAK;IAC3BJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEK,OAAO,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,aAAa,GAAG,MAAMT,QAAQ,CAACU,UAAU,CAACnB,YAAY,CAAC;MAC7DoB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,aAAa,CAAC;MAC/CJ,cAAc,CAACI,aAAa,CAACL,WAAW,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBd,QAAQ,CAACe,cAAc,CAAC,CAAC;IACzBV,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;EACtB,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd,IAAIa,QAAQ,CAACe,MAAM,GAAG,CAAC,EAAE;MACvBX,cAAc,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAACgB,OAAO,CAAC,CAAC,CAAC;IACvC;EACF,CAAC,EAAE,CAAChB,QAAQ,CAAC,CAAC;EAEd,oBACEN,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpB,CAACrB,QAAQ,CAACe,MAAM,gBACfrB,OAAA;MAAQ4B,OAAO,EAAEf,WAAY;MAAAU,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAE5D3B,OAAA,CAAAE,SAAA;MAAAqB,QAAA,gBACEvB,OAAA;QAAAuB,QAAA,GAAG,WAAS,EAACjB,QAAQ,CAAC,CAAC,CAAC,CAACuB,QAAQ;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtC3B,OAAA;QAAQ4B,OAAO,EAAET,YAAa;QAAAI,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChD3B,OAAA,CAACH,QAAQ;QAACc,OAAO,EAAEA,OAAQ;QAACF,WAAW,EAAEA;MAAY;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxD3B,OAAA,CAACF,QAAQ;QAACS,KAAK,EAAEA;MAAM;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAC1B,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CA7CID,GAAG;EAAA,QACwBT,OAAO;AAAA;AAAAoC,EAAA,GADlC3B,GAAG;AA+CT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}